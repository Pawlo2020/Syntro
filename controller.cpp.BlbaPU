#include "controller.h"
#include <QDebug>
#include <QGuiApplication>
#include <QQmlApplicationEngine>
#include <QQuickView>
#include <QQuickItem>
#include <QTimer>
#include <QDateTime>
#include <QThread>

#include "globals.h"

Controller::Controller(QObject* parent):QObject(parent){
qDebug("Controller created");


QTimer* timer = new QTimer(this);
connect(timer, SIGNAL(timeout()), this, SLOT(justDo()));

timer->start();
}

void Controller::switchEngine(){
engine = !engine;

if(engine){
if(_geng!=nullptr){
    QObject *root = _geng->rootObjects().value(0);

    QObject *hudOil = root->findChild<QObject*>("hudOil");

    if(hudOil){
        QThread *thread = QThread::create(animateEngineTurnON);

        thread->start(); // calls myFunction in another thread, passing arg1 and arg2

    }
 }
}else{
    switchControlPanel(false);

    lowOil = false;
    lowBattery = false;
    lowBeams = false;
    fullBeams = false;
    checkEngine = false;
    engine = false;

        QObject *pointer = root->findChild<QObject*>("pointer");
        QObject *rect2 = root->findChild<QObject*>("tek");

        if(rect){
        rect->setProperty("rotation", rect->property("targetRot"));

    updateView();
}


}

void Controller::animateEngineTurnON(){
    if(_geng!=nullptr){
        QObject *root = _geng->rootObjects().value(0);
        QObject *eng2 = _ceng->rootObjects().value(0);

        QObject *hudOil = root->findChild<QObject*>("hudOil");
        QObject *hudAccu = root->findChild<QObject*>("hudAccu");
        QObject *hudEngine = root->findChild<QObject*>("hudEngine");

        if(hudOil){
            hudOil->setProperty("source", QStringLiteral("qrc:/Assets/icons/nooil.png"));
            hudAccu->setProperty("source", QStringLiteral("qrc:/Assets/icons/accumulatorred.png"));
            hudEngine->setProperty("source", QStringLiteral("qrc:/Assets/icons/motorred.png"));

            Sleep(2000);

            hudOil->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));
            hudAccu->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));
            hudEngine->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

            switchControlPanel(true);
        }
     }
}

void Controller::switchControlPanel(bool state){

    QObject *eng2 = _ceng->rootObjects().value(0);

    QObject *hudLowBeams = eng2->findChild<QObject*>("switchLowBeams");
    QObject *hudFull = eng2->findChild<QObject*>("switchFullBeams");
    QObject *hudLowBatt = eng2->findChild<QObject*>("switchLowBattery");
    QObject *hudCheckEng = eng2->findChild<QObject*>("switchCheckEngine");
    QObject *hudLowOil = eng2->findChild<QObject*>("switchLowOil");

    QObject *gearDownBtn = eng2->findChild<QObject*>("GearDownBtn");
    QObject *gearUpBtn = eng2->findChild<QObject*>("GearUpBtn");

    QObject *accelSlider = eng2->findChild<QObject*>("AccelSlider");
    QObject *handlingSlider = eng2->findChild<QObject*>("HandlingSlider");

    hudLowBeams->setProperty("checked", false);
    hudFull->setProperty("checked", false);
    hudLowBatt->setProperty("checked", false);
    hudCheckEng->setProperty("checked", false);
    hudLowOil->setProperty("checked", false);

    accelSlider->setProperty("value", -30);

    hudLowBeams->setProperty("enabled", state);
    hudFull->setProperty("enabled", state);
    hudLowBatt->setProperty("enabled", state);
    hudCheckEng->setProperty("enabled", state);
    hudLowOil->setProperty("enabled", state);

    gearDownBtn->setProperty("enabled", state);
    gearUpBtn->setProperty("enabled", state);

    accelSlider->setProperty("enabled", state);
    handlingSlider->setProperty("enabled", state);
}

void Controller::switchLowOil(){
lowOil = !lowOil;



if(_geng!=nullptr){
    QObject *root = _geng->rootObjects().value(0);

    QObject *rect = root->findChild<QObject*>("hudOil");

    if(rect){
        if(lowOil){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/nooil.png"));
        }

        if(!lowOil){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

        }

    }
}

}

void Controller::updateView(){
    if(_geng!=nullptr){
        QObject *root = _geng->rootObjects().value(0);

        QObject *hudOil = root->findChild<QObject*>("hudOil");
        QObject *hudAccu = root->findChild<QObject*>("hudAccu");
        QObject *hudEngine = root->findChild<QObject*>("hudEngine");
        QObject *hudLights = root->findChild<QObject*>("hudLights");

        if(hudOil){
            if(lowOil){
                hudOil->setProperty("source", QStringLiteral("qrc:/Assets/icons/nooil.png"));
            }

            if(!lowOil){
                hudOil->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

            }

            if(lowBattery){
                hudAccu->setProperty("source", QStringLiteral("qrc:/Assets/icons/accumulatorred.png"));
            }

            if(!lowBattery){
                hudAccu->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

            }

            if(checkEngine){
                hudEngine->setProperty("source", QStringLiteral("qrc:/Assets/icons/motorred.png"));
            }

            if(!checkEngine){
                hudEngine->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

            }


            if(fullBeams){
                hudLights->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-blu.png"));
            }

            if(!lowBeams && !fullBeams){
                hudLights->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

            }

            if(!fullBeams && lowBeams){
                hudLights->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-grn.png"));
            }


        }
    }
}

void Controller::switchLowBattery(){
lowBattery = !lowBattery;

if(_geng!=nullptr){
    QObject *root = _geng->rootObjects().value(0);

    QObject *rect = root->findChild<QObject*>("hudAccu");

    if(rect){
        if(lowBattery){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/accumulatorred.png"));
        }

        if(!lowBattery){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

        }

    }
}
}

void Controller::switchCheckEngine(){
checkEngine = !checkEngine;

if(_geng!=nullptr){
    QObject *root = _geng->rootObjects().value(0);

    QObject *rect = root->findChild<QObject*>("hudEngine");

    if(rect){
        if(checkEngine){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/motorred.png"));
        }

        if(!checkEngine){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

        }

    }
}
}




void Controller::switchLowBeams(){
lowBeams = !lowBeams;


//  source: "Assets/icons/car-light-grn.png"

if(_geng!=nullptr){
    QObject *root = _geng->rootObjects().value(0);

    QObject *rect = root->findChild<QObject*>("hudLights");

    if(rect){
        if(lowBeams && !fullBeams){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-grn.png"));
        }

        if(!lowBeams && !fullBeams){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

        }

    }
}
}

void Controller::switchFullBeams(){
fullBeams = !fullBeams;


if(_geng!=nullptr){
    QObject *root = _geng->rootObjects().value(0);

    QObject *rect = root->findChild<QObject*>("hudLights");

    if(rect){
        if(fullBeams){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-blu.png"));
        }

        if(!lowBeams && !fullBeams){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-GONE.png"));

        }

        if(!fullBeams && lowBeams){
            rect->setProperty("source", QStringLiteral("qrc:/Assets/icons/car-light-grn.png"));
        }

    }
}

}

void Controller::justDo(){
    if(_geng!=nullptr){
        QObject *root = _geng->rootObjects().value(0);

        QObject *rect = root->findChild<QObject*>("pointer");
        QObject *rect2 = root->findChild<QObject*>("tek");

        if(rect){
        rect->setProperty("rotation", rect->property("targetRot"));
        //qDebug() << rect->property("targetRot");
        }
       }
}

void Controller::onAccelMove(qreal real){
    //qDebug() << real;

    if(_geng!=nullptr){
        QObject *root = _geng->rootObjects().value(0);

        QObject *rect = root->findChild<QObject*>("pointer");
        QObject *rect2 = root->findChild<QObject*>("tek");

        if(rect){
            //QMetaObject::invokeMethod(rect2, "stop");
            rect->setProperty("targetRot", real);
            //QMetaObject::invokeMethod(rect2, "start");
            //rect2->setProperty("to", real);
            //QMetaObject::invokeMethod(rect2, "start");
        }

    }
}

void Controller::upGear(){
    if(_currentGear!=5){
        _currentGear++;
    }

    QObject *root = _geng->rootObjects().value(0);
    QObject *rect = root->findChild<QObject*>("gearLbl");

    if(rect){
        rect->setProperty("text", gearTable[_currentGear]);
    }


}

void Controller::downGear(){
    if(_currentGear!=0){
        _currentGear--;
    }

    QObject *root = _geng->rootObjects().value(0);
    QObject *rect = root->findChild<QObject*>("gearLbl");

    if(rect){
        rect->setProperty("text", gearTable[_currentGear]);
    }


}
